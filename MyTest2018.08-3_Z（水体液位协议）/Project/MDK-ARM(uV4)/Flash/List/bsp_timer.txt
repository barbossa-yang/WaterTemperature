; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_timer.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_timer.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\RTX\inc -I..\..\RTX\portable -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_timer.crf ..\..\User\bsp\src\bsp_timer.c]
                          THUMB

                          AREA ||i.ConfigTimerNVIC||, CODE, READONLY, ALIGN=1

                  ConfigTimerNVIC PROC
;;;20     
;;;21     static void ConfigTimerNVIC(void)
000000  b508              PUSH     {r3,lr}
;;;22     {
;;;23     
;;;24     	NVIC_InitTypeDef NVIC_InitStructure;
;;;25     	
;;;26         NVIC_InitStructure.NVIC_IRQChannel = TIM5_IRQn;	
000002  2032              MOVS     r0,#0x32
000004  f88d0000          STRB     r0,[sp,#0]
;;;27         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000008  2001              MOVS     r0,#1
00000a  f88d0001          STRB     r0,[sp,#1]
;;;28         NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
00000e  2000              MOVS     r0,#0
000010  f88d0002          STRB     r0,[sp,#2]
;;;29         NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000014  2001              MOVS     r0,#1
000016  f88d0003          STRB     r0,[sp,#3]
;;;30         NVIC_Init(&NVIC_InitStructure);
00001a  4668              MOV      r0,sp
00001c  f7fffffe          BL       NVIC_Init
;;;31     
;;;32         NVIC_InitStructure.NVIC_IRQChannel = TIM4_IRQn;	
000020  201e              MOVS     r0,#0x1e
000022  f88d0000          STRB     r0,[sp,#0]
;;;33         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
000026  2002              MOVS     r0,#2
000028  f88d0001          STRB     r0,[sp,#1]
;;;34         NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
00002c  2000              MOVS     r0,#0
00002e  f88d0002          STRB     r0,[sp,#2]
;;;35         NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000032  2001              MOVS     r0,#1
000034  f88d0003          STRB     r0,[sp,#3]
;;;36         NVIC_Init(&NVIC_InitStructure);	
000038  4668              MOV      r0,sp
00003a  f7fffffe          BL       NVIC_Init
;;;37     	
;;;38         NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;	
00003e  201d              MOVS     r0,#0x1d
000040  f88d0000          STRB     r0,[sp,#0]
;;;39         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
000044  2002              MOVS     r0,#2
000046  f88d0001          STRB     r0,[sp,#1]
;;;40         NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
00004a  2000              MOVS     r0,#0
00004c  f88d0002          STRB     r0,[sp,#2]
;;;41         NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000050  2001              MOVS     r0,#1
000052  f88d0003          STRB     r0,[sp,#3]
;;;42         NVIC_Init(&NVIC_InitStructure);		
000056  4668              MOV      r0,sp
000058  f7fffffe          BL       NVIC_Init
;;;43     	
;;;44         NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;	
00005c  201c              MOVS     r0,#0x1c
00005e  f88d0000          STRB     r0,[sp,#0]
;;;45         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
000062  2002              MOVS     r0,#2
000064  f88d0001          STRB     r0,[sp,#1]
;;;46         NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000068  2000              MOVS     r0,#0
00006a  f88d0002          STRB     r0,[sp,#2]
;;;47         NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00006e  2001              MOVS     r0,#1
000070  f88d0003          STRB     r0,[sp,#3]
;;;48         NVIC_Init(&NVIC_InitStructure);	
000074  4668              MOV      r0,sp
000076  f7fffffe          BL       NVIC_Init
;;;49     
;;;50     	NVIC_InitStructure.NVIC_IRQChannel = RTC_IRQn;
00007a  2003              MOVS     r0,#3
00007c  f88d0000          STRB     r0,[sp,#0]
;;;51     	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 1;
000080  2001              MOVS     r0,#1
000082  f88d0001          STRB     r0,[sp,#1]
;;;52     	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
000086  2000              MOVS     r0,#0
000088  f88d0002          STRB     r0,[sp,#2]
;;;53     	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
00008c  2001              MOVS     r0,#1
00008e  f88d0003          STRB     r0,[sp,#3]
;;;54     	NVIC_Init(&NVIC_InitStructure);	
000092  4668              MOV      r0,sp
000094  f7fffffe          BL       NVIC_Init
;;;55     	
;;;56     }
000098  bd08              POP      {r3,pc}
;;;57     
                          ENDP


                          AREA ||i.bsp_InitHardTimer||, CODE, READONLY, ALIGN=2

                  bsp_InitHardTimer PROC
;;;57     
;;;58     void bsp_InitHardTimer(void)
000000  b500              PUSH     {lr}
;;;59     {
000002  b087              SUB      sp,sp,#0x1c
;;;60     	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;61     
;;;62     	TIM_ICInitTypeDef  TIM_ICInitStructure;  
;;;63     
;;;64     	GPIO_InitTypeDef GPIO_InitStructure;
;;;65     
;;;66     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);
000004  2101              MOVS     r1,#1
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;67     	
;;;68     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
00000c  2101              MOVS     r1,#1
00000e  2002              MOVS     r0,#2
000010  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;69     	
;;;70     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE); 
000014  2101              MOVS     r1,#1
000016  2004              MOVS     r0,#4
000018  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;71     	
;;;72     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM5, ENABLE); 
00001c  2101              MOVS     r1,#1
00001e  2008              MOVS     r0,#8
000020  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;73     
;;;74     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE); 
000024  2101              MOVS     r1,#1
000026  2004              MOVS     r0,#4
000028  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;75     	
;;;76         
;;;77     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;
00002c  2001              MOVS     r0,#1
00002e  f8ad0000          STRH     r0,[sp,#0]
;;;78       	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;				
000032  2003              MOVS     r0,#3
000034  f88d0002          STRB     r0,[sp,#2]
;;;79       	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;;				  	
000038  2048              MOVS     r0,#0x48
00003a  f88d0003          STRB     r0,[sp,#3]
;;;80       	GPIO_Init(GPIOA, &GPIO_InitStructure);	
00003e  4669              MOV      r1,sp
000040  4843              LDR      r0,|L2.336|
000042  f7fffffe          BL       GPIO_Init
;;;81     	
;;;82     	// TIM3 250ms,·çËÙ 4Hz
;;;83     	
;;;84     	TIM_TimeBaseStructure.TIM_Period =2499;
000046  f64010c3          MOV      r0,#0x9c3
00004a  f8ad0014          STRH     r0,[sp,#0x14]
;;;85     	TIM_TimeBaseStructure.TIM_Prescaler = 7199;
00004e  f641401f          MOV      r0,#0x1c1f
000052  f8ad0010          STRH     r0,[sp,#0x10]
;;;86     	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
000056  2000              MOVS     r0,#0
000058  f8ad0016          STRH     r0,[sp,#0x16]
;;;87     	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
00005c  f8ad0012          STRH     r0,[sp,#0x12]
;;;88     
;;;89     	TIM_TimeBaseInit(TIM3, &TIM_TimeBaseStructure);
000060  a904              ADD      r1,sp,#0x10
000062  483c              LDR      r0,|L2.340|
000064  f7fffffe          BL       TIM_TimeBaseInit
;;;90     
;;;91     	TIM_ClearFlag(TIM3, TIM_FLAG_Update); 
000068  2101              MOVS     r1,#1
00006a  483a              LDR      r0,|L2.340|
00006c  f7fffffe          BL       TIM_ClearFlag
;;;92     	TIM_ITConfig(TIM3,TIM_IT_Update, ENABLE); 
000070  2201              MOVS     r2,#1
000072  4611              MOV      r1,r2
000074  4837              LDR      r0,|L2.340|
000076  f7fffffe          BL       TIM_ITConfig
;;;93     
;;;94     	TIM_Cmd(TIM3, ENABLE);
00007a  2101              MOVS     r1,#1
00007c  4835              LDR      r0,|L2.340|
00007e  f7fffffe          BL       TIM_Cmd
;;;95     	
;;;96     	// TIM2 1s
;;;97     	TIM_TimeBaseStructure.TIM_Period =9999;
000082  f242700f          MOV      r0,#0x270f
000086  f8ad0014          STRH     r0,[sp,#0x14]
;;;98     	TIM_TimeBaseStructure.TIM_Prescaler = 7199;
00008a  f641401f          MOV      r0,#0x1c1f
00008e  f8ad0010          STRH     r0,[sp,#0x10]
;;;99     	TIM_TimeBaseStructure.TIM_ClockDivision = 0;
000092  2000              MOVS     r0,#0
000094  f8ad0016          STRH     r0,[sp,#0x16]
;;;100    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;
000098  f8ad0012          STRH     r0,[sp,#0x12]
;;;101    
;;;102    	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseStructure);
00009c  a904              ADD      r1,sp,#0x10
00009e  f04f4080          MOV      r0,#0x40000000
0000a2  f7fffffe          BL       TIM_TimeBaseInit
;;;103    
;;;104    	TIM_ClearFlag(TIM2, TIM_FLAG_Update); 
0000a6  2101              MOVS     r1,#1
0000a8  0788              LSLS     r0,r1,#30
0000aa  f7fffffe          BL       TIM_ClearFlag
;;;105    	TIM_ITConfig(TIM2,TIM_IT_Update, ENABLE); 
0000ae  2201              MOVS     r2,#1
0000b0  4611              MOV      r1,r2
0000b2  0790              LSLS     r0,r2,#30
0000b4  f7fffffe          BL       TIM_ITConfig
;;;106    
;;;107    	TIM_Cmd(TIM2, ENABLE);
0000b8  2101              MOVS     r1,#1
0000ba  0788              LSLS     r0,r1,#30
0000bc  f7fffffe          BL       TIM_Cmd
;;;108    	
;;;109    	// TIM4 ¶¨Ê±10ms
;;;110    	TIM_TimeBaseStructure.TIM_Period = 19;        //¼ÇÊýÖµ  
0000c0  2013              MOVS     r0,#0x13
0000c2  f8ad0014          STRH     r0,[sp,#0x14]
;;;111    	TIM_TimeBaseStructure.TIM_Prescaler = 35999;  //Ô¤·ÖÆµ£¬72000,000/(35999+1)     
0000c6  f648409f          MOV      r0,#0x8c9f
0000ca  f8ad0010          STRH     r0,[sp,#0x10]
;;;112    	TIM_TimeBaseStructure.TIM_ClockDivision = 0x00;    
0000ce  2000              MOVS     r0,#0
0000d0  f8ad0016          STRH     r0,[sp,#0x16]
;;;113    	TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up; 
0000d4  f8ad0012          STRH     r0,[sp,#0x12]
;;;114    
;;;115    	TIM_TimeBaseInit(TIM4, &TIM_TimeBaseStructure);
0000d8  a904              ADD      r1,sp,#0x10
0000da  481f              LDR      r0,|L2.344|
0000dc  f7fffffe          BL       TIM_TimeBaseInit
;;;116    	TIM_ARRPreloadConfig(TIM4, ENABLE);
0000e0  2101              MOVS     r1,#1
0000e2  481d              LDR      r0,|L2.344|
0000e4  f7fffffe          BL       TIM_ARRPreloadConfig
;;;117    
;;;118    	TIM_Cmd(TIM4, ENABLE);	
0000e8  2101              MOVS     r1,#1
0000ea  481b              LDR      r0,|L2.344|
0000ec  f7fffffe          BL       TIM_Cmd
;;;119    	
;;;120    	// TIM4 IT enable 
;;;121    	TIM_ITConfig(TIM4, TIM_IT_Update,ENABLE);
0000f0  2201              MOVS     r2,#1
0000f2  4611              MOV      r1,r2
0000f4  4818              LDR      r0,|L2.344|
0000f6  f7fffffe          BL       TIM_ITConfig
;;;122    
;;;123    	//TIM5 CH1 ²âÆµ
;;;124    
;;;125    	/* TIM2 configuration: PWM Input mode ------------------------
;;;126    	The external signal is connected to TIM2 CH2 pin (PA.01), 
;;;127    	The Rising edge is used as active edge,
;;;128    	The TIM2 CCR2 is used to compute the frequency value 
;;;129    	The TIM2 CCR1 is used to compute the duty cycle value
;;;130    	------------------------------------------------------------ */
;;;131    
;;;132    	
;;;133    	TIM_ICInitStructure.TIM_Channel = TIM_Channel_1;
0000fa  2000              MOVS     r0,#0
0000fc  f8ad0004          STRH     r0,[sp,#4]
;;;134    	TIM_ICInitStructure.TIM_ICPolarity = TIM_ICPolarity_Rising;
000100  f8ad0006          STRH     r0,[sp,#6]
;;;135    	TIM_ICInitStructure.TIM_ICSelection = TIM_ICSelection_DirectTI;
000104  2001              MOVS     r0,#1
000106  f8ad0008          STRH     r0,[sp,#8]
;;;136    	TIM_ICInitStructure.TIM_ICPrescaler = TIM_ICPSC_DIV1;
00010a  2000              MOVS     r0,#0
00010c  f8ad000a          STRH     r0,[sp,#0xa]
;;;137    	TIM_ICInitStructure.TIM_ICFilter = 0x00;
000110  f8ad000c          STRH     r0,[sp,#0xc]
;;;138    
;;;139    	TIM_PWMIConfig(TIM5, &TIM_ICInitStructure);
000114  a901              ADD      r1,sp,#4
000116  4811              LDR      r0,|L2.348|
000118  f7fffffe          BL       TIM_PWMIConfig
;;;140    
;;;141    	/* Select the TIM2 Input Trigger: TI2FP2 */
;;;142    	TIM_SelectInputTrigger(TIM5, TIM_TS_TI1FP1);
00011c  2150              MOVS     r1,#0x50
00011e  480f              LDR      r0,|L2.348|
000120  f7fffffe          BL       TIM_SelectInputTrigger
;;;143    
;;;144    	/* Select the slave Mode: Reset Mode */
;;;145    	TIM_SelectSlaveMode(TIM5, TIM_SlaveMode_Reset);
000124  2104              MOVS     r1,#4
000126  480d              LDR      r0,|L2.348|
000128  f7fffffe          BL       TIM_SelectSlaveMode
;;;146    
;;;147    	/* Enable the Master/Slave Mode */
;;;148    	TIM_SelectMasterSlaveMode(TIM5, TIM_MasterSlaveMode_Enable);
00012c  2180              MOVS     r1,#0x80
00012e  480b              LDR      r0,|L2.348|
000130  f7fffffe          BL       TIM_SelectMasterSlaveMode
;;;149    
;;;150    	/* TIM enable counter */
;;;151    	TIM_Cmd(TIM5, ENABLE);
000134  2101              MOVS     r1,#1
000136  4809              LDR      r0,|L2.348|
000138  f7fffffe          BL       TIM_Cmd
;;;152    
;;;153    	/* Enable the CC2 Interrupt Request */
;;;154    	//TIM_ITConfig(TIM5, TIM_IT_CC1, ENABLE);
;;;155    
;;;156    	TIM_ITConfig(TIM5, TIM_IT_CC1, DISABLE);
00013c  2200              MOVS     r2,#0
00013e  2102              MOVS     r1,#2
000140  4806              LDR      r0,|L2.348|
000142  f7fffffe          BL       TIM_ITConfig
;;;157    	
;;;158    	ConfigTimerNVIC();
000146  f7fffffe          BL       ConfigTimerNVIC
;;;159    	
;;;160    }
00014a  b007              ADD      sp,sp,#0x1c
00014c  bd00              POP      {pc}
;;;161    
                          ENDP

00014e  0000              DCW      0x0000
                  |L2.336|
                          DCD      0x40010800
                  |L2.340|
                          DCD      0x40000400
                  |L2.344|
                          DCD      0x40000800
                  |L2.348|
                          DCD      0x40000c00

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_timer.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_bsp_timer_c_3cb1b625____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_bsp_timer_c_3cb1b625____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___11_bsp_timer_c_3cb1b625____REVSH|
#line 128
|__asm___11_bsp_timer_c_3cb1b625____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
