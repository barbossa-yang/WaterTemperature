; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_led.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_led.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\RTX\inc -I..\..\RTX\portable -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_led.crf ..\..\User\bsp\src\bsp_led.c]
                          THUMB

                          AREA ||i.bsp_InitLed||, CODE, READONLY, ALIGN=2

                  bsp_InitLed PROC
;;;29     
;;;30     void bsp_InitLed(void)
000000  b508              PUSH     {r3,lr}
;;;31     {
;;;32     	GPIO_InitTypeDef GPIO_InitStructure;
;;;33     
;;;34     	/* ´ò¿ªGPIOÊ±ÖÓ */
;;;35     	RCC_APB2PeriphClockCmd(RCC_ALL_LED, ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;36     
;;;37     	//Ï¨µÆ
;;;38     	
;;;39     	GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
00000a  2004              MOVS     r0,#4
00000c  4914              LDR      r1,|L1.96|
00000e  6108              STR      r0,[r1,#0x10]
;;;40     	GPIO_PORT_LED2->BSRR = GPIO_PIN_LED2;
000010  2002              MOVS     r0,#2
000012  6108              STR      r0,[r1,#0x10]
;;;41     	GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
000014  6108              STR      r0,[r1,#0x10]
;;;42     	GPIO_PORT_LED4->BSRR = GPIO_PIN_LED4;
000016  2001              MOVS     r0,#1
000018  6108              STR      r0,[r1,#0x10]
;;;43     
;;;44     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00001a  2003              MOVS     r0,#3
00001c  f88d0002          STRB     r0,[sp,#2]
;;;45     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;	
000020  2010              MOVS     r0,#0x10
000022  f88d0003          STRB     r0,[sp,#3]
;;;46     	
;;;47     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED1;
000026  2004              MOVS     r0,#4
000028  f8ad0000          STRH     r0,[sp,#0]
;;;48     	GPIO_Init(GPIO_PORT_LED1, &GPIO_InitStructure);
00002c  4669              MOV      r1,sp
00002e  480c              LDR      r0,|L1.96|
000030  f7fffffe          BL       GPIO_Init
;;;49     
;;;50     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED2;
000034  2002              MOVS     r0,#2
000036  f8ad0000          STRH     r0,[sp,#0]
;;;51     	GPIO_Init(GPIO_PORT_LED2, &GPIO_InitStructure);
00003a  4669              MOV      r1,sp
00003c  4808              LDR      r0,|L1.96|
00003e  f7fffffe          BL       GPIO_Init
;;;52     
;;;53     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED3;
000042  2002              MOVS     r0,#2
000044  f8ad0000          STRH     r0,[sp,#0]
;;;54     	GPIO_Init(GPIO_PORT_LED3, &GPIO_InitStructure);
000048  4669              MOV      r1,sp
00004a  4805              LDR      r0,|L1.96|
00004c  f7fffffe          BL       GPIO_Init
;;;55     
;;;56     	GPIO_InitStructure.GPIO_Pin = GPIO_PIN_LED4;
000050  2001              MOVS     r0,#1
000052  f8ad0000          STRH     r0,[sp,#0]
;;;57     	GPIO_Init(GPIO_PORT_LED4, &GPIO_InitStructure);
000056  4669              MOV      r1,sp
000058  4801              LDR      r0,|L1.96|
00005a  f7fffffe          BL       GPIO_Init
;;;58     }
00005e  bd08              POP      {r3,pc}
;;;59     
                          ENDP

                  |L1.96|
                          DCD      0x40011000

                          AREA ||i.bsp_IsLedOn||, CODE, READONLY, ALIGN=2

                  bsp_IsLedOn PROC
;;;175    */
;;;176    uint8_t bsp_IsLedOn(uint8_t _no)
000000  4601              MOV      r1,r0
;;;177    {
;;;178    	if (_no == 1)
000002  2901              CMP      r1,#1
000004  d108              BNE      |L2.24|
;;;179    	{
;;;180    		if ((GPIO_PORT_LED1->ODR & GPIO_PIN_LED1) == 0)
000006  4816              LDR      r0,|L2.96|
000008  68c0              LDR      r0,[r0,#0xc]
00000a  f0100f04          TST      r0,#4
00000e  d101              BNE      |L2.20|
;;;181    		{
;;;182    			return 1;
000010  2001              MOVS     r0,#1
                  |L2.18|
;;;183    		}
;;;184    		return 0;
;;;185    	}
;;;186    	else if (_no == 2)
;;;187    	{
;;;188    		if ((GPIO_PORT_LED2->ODR & GPIO_PIN_LED2) == 0)
;;;189    		{
;;;190    			return 1;
;;;191    		}
;;;192    		return 0;
;;;193    	}
;;;194    	else if (_no == 3)
;;;195    	{
;;;196    		if ((GPIO_PORT_LED3->ODR & GPIO_PIN_LED3) == 0)
;;;197    		{
;;;198    			return 1;
;;;199    		}
;;;200    		return 0;
;;;201    	}
;;;202    	else if (_no == 4)
;;;203    	{
;;;204    		if ((GPIO_PORT_LED4->ODR & GPIO_PIN_LED4) == 0)
;;;205    		{
;;;206    			return 1;
;;;207    		}
;;;208    		return 0;
;;;209    	}
;;;210    
;;;211    	return 0;
;;;212    }
000012  4770              BX       lr
                  |L2.20|
000014  2000              MOVS     r0,#0                 ;184
000016  e7fc              B        |L2.18|
                  |L2.24|
000018  2902              CMP      r1,#2                 ;186
00001a  d108              BNE      |L2.46|
00001c  4810              LDR      r0,|L2.96|
00001e  68c0              LDR      r0,[r0,#0xc]          ;188
000020  f0100f02          TST      r0,#2                 ;188
000024  d101              BNE      |L2.42|
000026  2001              MOVS     r0,#1                 ;190
000028  e7f3              B        |L2.18|
                  |L2.42|
00002a  2000              MOVS     r0,#0                 ;192
00002c  e7f1              B        |L2.18|
                  |L2.46|
00002e  2903              CMP      r1,#3                 ;194
000030  d108              BNE      |L2.68|
000032  480b              LDR      r0,|L2.96|
000034  68c0              LDR      r0,[r0,#0xc]          ;196
000036  f0100f02          TST      r0,#2                 ;196
00003a  d101              BNE      |L2.64|
00003c  2001              MOVS     r0,#1                 ;198
00003e  e7e8              B        |L2.18|
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;200
000042  e7e6              B        |L2.18|
                  |L2.68|
000044  2904              CMP      r1,#4                 ;202
000046  d108              BNE      |L2.90|
000048  4805              LDR      r0,|L2.96|
00004a  68c0              LDR      r0,[r0,#0xc]          ;204
00004c  f0100f01          TST      r0,#1                 ;204
000050  d101              BNE      |L2.86|
000052  2001              MOVS     r0,#1                 ;206
000054  e7dd              B        |L2.18|
                  |L2.86|
000056  2000              MOVS     r0,#0                 ;208
000058  e7db              B        |L2.18|
                  |L2.90|
00005a  2000              MOVS     r0,#0                 ;211
00005c  e7d9              B        |L2.18|
;;;213    
                          ENDP

00005e  0000              DCW      0x0000
                  |L2.96|
                          DCD      0x40011000

                          AREA ||i.bsp_Led1Off||, CODE, READONLY, ALIGN=2

                  bsp_Led1Off PROC
;;;125    
;;;126    void bsp_Led1Off(void)
000000  2004              MOVS     r0,#4
;;;127    {
;;;128    	GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000002  4901              LDR      r1,|L3.8|
000004  6108              STR      r0,[r1,#0x10]
;;;129    }
000006  4770              BX       lr
;;;130    
                          ENDP

                  |L3.8|
                          DCD      0x40011000

                          AREA ||i.bsp_Led1On||, CODE, READONLY, ALIGN=2

                  bsp_Led1On PROC
;;;95     */
;;;96     void bsp_Led1On(void)
000000  2004              MOVS     r0,#4
;;;97     {
;;;98     	GPIO_PORT_LED1->BRR = GPIO_PIN_LED1;
000002  4901              LDR      r1,|L4.8|
000004  6148              STR      r0,[r1,#0x14]
;;;99     }
000006  4770              BX       lr
;;;100    
                          ENDP

                  |L4.8|
                          DCD      0x40011000

                          AREA ||i.bsp_Led1Toggle||, CODE, READONLY, ALIGN=2

                  bsp_Led1Toggle PROC
;;;67     */
;;;68     void bsp_Led1Toggle(void)
000000  4803              LDR      r0,|L5.16|
;;;69     {
;;;70     	GPIO_PORT_LED1->ODR ^= GPIO_PIN_LED1;
000002  68c0              LDR      r0,[r0,#0xc]
000004  f0800004          EOR      r0,r0,#4
000008  4901              LDR      r1,|L5.16|
00000a  60c8              STR      r0,[r1,#0xc]
;;;71     }
00000c  4770              BX       lr
;;;72     
                          ENDP

00000e  0000              DCW      0x0000
                  |L5.16|
                          DCD      0x40011000

                          AREA ||i.bsp_Led3Off||, CODE, READONLY, ALIGN=2

                  bsp_Led3Off PROC
;;;135    
;;;136    void bsp_Led3Off(void)
000000  2002              MOVS     r0,#2
;;;137    {
;;;138    	GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
000002  4901              LDR      r1,|L6.8|
000004  6108              STR      r0,[r1,#0x10]
;;;139    }
000006  4770              BX       lr
;;;140    
                          ENDP

                  |L6.8|
                          DCD      0x40011000

                          AREA ||i.bsp_Led3On||, CODE, READONLY, ALIGN=2

                  bsp_Led3On PROC
;;;105    
;;;106    void bsp_Led3On(void)
000000  2002              MOVS     r0,#2
;;;107    {
;;;108    	GPIO_PORT_LED3->BRR = GPIO_PIN_LED3;
000002  4901              LDR      r1,|L7.8|
000004  6148              STR      r0,[r1,#0x14]
;;;109    }
000006  4770              BX       lr
;;;110    
                          ENDP

                  |L7.8|
                          DCD      0x40011000

                          AREA ||i.bsp_Led3Toggle||, CODE, READONLY, ALIGN=2

                  bsp_Led3Toggle PROC
;;;77     
;;;78     void bsp_Led3Toggle(void)
000000  4803              LDR      r0,|L8.16|
;;;79     {
;;;80     	GPIO_PORT_LED3->ODR ^= GPIO_PIN_LED3;
000002  68c0              LDR      r0,[r0,#0xc]
000004  f0800002          EOR      r0,r0,#2
000008  4901              LDR      r1,|L8.16|
00000a  60c8              STR      r0,[r1,#0xc]
;;;81     }
00000c  4770              BX       lr
;;;82     
                          ENDP

00000e  0000              DCW      0x0000
                  |L8.16|
                          DCD      0x40011000

                          AREA ||i.bsp_Led4Off||, CODE, READONLY, ALIGN=2

                  bsp_Led4Off PROC
;;;140    
;;;141    void bsp_Led4Off(void)
000000  2001              MOVS     r0,#1
;;;142    {
;;;143    	GPIO_PORT_LED4->BSRR = GPIO_PIN_LED4;
000002  4901              LDR      r1,|L9.8|
000004  6108              STR      r0,[r1,#0x10]
;;;144    }
000006  4770              BX       lr
;;;145    
                          ENDP

                  |L9.8|
                          DCD      0x40011000

                          AREA ||i.bsp_Led4On||, CODE, READONLY, ALIGN=2

                  bsp_Led4On PROC
;;;110    
;;;111    void bsp_Led4On(void)
000000  2001              MOVS     r0,#1
;;;112    {
;;;113    	GPIO_PORT_LED4->BRR = GPIO_PIN_LED4;
000002  4901              LDR      r1,|L10.8|
000004  6148              STR      r0,[r1,#0x14]
;;;114    }
000006  4770              BX       lr
;;;115    
                          ENDP

                  |L10.8|
                          DCD      0x40011000

                          AREA ||i.bsp_Led4Toggle||, CODE, READONLY, ALIGN=2

                  bsp_Led4Toggle PROC
;;;82     
;;;83     void bsp_Led4Toggle(void)
000000  4803              LDR      r0,|L11.16|
;;;84     {
;;;85     	GPIO_PORT_LED4->ODR ^= GPIO_PIN_LED4;
000002  68c0              LDR      r0,[r0,#0xc]
000004  f0800001          EOR      r0,r0,#1
000008  4901              LDR      r1,|L11.16|
00000a  60c8              STR      r0,[r1,#0xc]
;;;86     }
00000c  4770              BX       lr
;;;87     
                          ENDP

00000e  0000              DCW      0x0000
                  |L11.16|
                          DCD      0x40011000

                          AREA ||i.bsp_LedOff||, CODE, READONLY, ALIGN=2

                  bsp_LedOff PROC
;;;145    
;;;146    void bsp_LedOff(uint8_t _no)
000000  1e41              SUBS     r1,r0,#1
;;;147    {
;;;148    	_no--;
000002  b2c8              UXTB     r0,r1
;;;149    
;;;150    	if (_no == 0)
000004  b918              CBNZ     r0,|L12.14|
;;;151    	{
;;;152    		GPIO_PORT_LED1->BSRR = GPIO_PIN_LED1;
000006  2104              MOVS     r1,#4
000008  4a0a              LDR      r2,|L12.52|
00000a  6111              STR      r1,[r2,#0x10]
00000c  e010              B        |L12.48|
                  |L12.14|
;;;153    	}
;;;154    	else if (_no == 1)
00000e  2801              CMP      r0,#1
000010  d103              BNE      |L12.26|
;;;155    	{
;;;156    		GPIO_PORT_LED2->BSRR = GPIO_PIN_LED2;
000012  2102              MOVS     r1,#2
000014  4a07              LDR      r2,|L12.52|
000016  6111              STR      r1,[r2,#0x10]
000018  e00a              B        |L12.48|
                  |L12.26|
;;;157    	}
;;;158    	else if (_no == 2)
00001a  2802              CMP      r0,#2
00001c  d103              BNE      |L12.38|
;;;159    	{
;;;160    		GPIO_PORT_LED3->BSRR = GPIO_PIN_LED3;
00001e  2102              MOVS     r1,#2
000020  4a04              LDR      r2,|L12.52|
000022  6111              STR      r1,[r2,#0x10]
000024  e004              B        |L12.48|
                  |L12.38|
;;;161    	}
;;;162    	else if (_no == 3)
000026  2803              CMP      r0,#3
000028  d102              BNE      |L12.48|
;;;163    	{
;;;164    		GPIO_PORT_LED4->BSRR = GPIO_PIN_LED4;
00002a  2101              MOVS     r1,#1
00002c  4a01              LDR      r2,|L12.52|
00002e  6111              STR      r1,[r2,#0x10]
                  |L12.48|
;;;165    	}
;;;166    }
000030  4770              BX       lr
;;;167    
                          ENDP

000032  0000              DCW      0x0000
                  |L12.52|
                          DCD      0x40011000

;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_led.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___9_bsp_led_c_ba23b041____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___9_bsp_led_c_ba23b041____REVSH|
#line 128
|__asm___9_bsp_led_c_ba23b041____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
