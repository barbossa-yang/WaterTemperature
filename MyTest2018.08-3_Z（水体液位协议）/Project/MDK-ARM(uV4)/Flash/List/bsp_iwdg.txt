; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\flash\obj\bsp_iwdg.o --asm_dir=.\Flash\List\ --list_dir=.\Flash\List\ --depend=.\flash\obj\bsp_iwdg.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=870 -I..\..\Libraries\CMSIS\Device\ST\STM32F10x\Include -I..\..\Libraries\STM32F10x_StdPeriph_Driver\inc -I..\..\User\bsp -I..\..\User\bsp\inc -I..\..\User -I..\..\Libraries\CMSIS\Include -I..\..\RTX\inc -I..\..\RTX\portable -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD --omf_browse=.\flash\obj\bsp_iwdg.crf ..\..\User\bsp\src\bsp_iwdg.c]
                          THUMB

                          AREA ||i.bsp_InitIwdg||, CODE, READONLY, ALIGN=1

                  bsp_InitIwdg PROC
;;;29     */
;;;30     void bsp_InitIwdg(uint32_t _ulIWDGTime)
000000  b510              PUSH     {r4,lr}
;;;31     {
000002  4604              MOV      r4,r0
;;;32     		
;;;33     	/* 检测系统是否从独立看门狗复位中恢复 */
;;;34     	if (RCC_GetFlagStatus(RCC_FLAG_IWDGRST) != RESET)
000004  207d              MOVS     r0,#0x7d
000006  f7fffffe          BL       RCC_GetFlagStatus
00000a  b108              CBZ      r0,|L1.16|
;;;35     	{		
;;;36     		/* 清除复位标志 */
;;;37     		RCC_ClearFlag();
00000c  f7fffffe          BL       RCC_ClearFlag
                  |L1.16|
;;;38     	}
;;;39     	
;;;40     	/* 使能LSI */
;;;41     	RCC_LSICmd(ENABLE);
000010  2001              MOVS     r0,#1
000012  f7fffffe          BL       RCC_LSICmd
;;;42     	
;;;43     	/* 等待直到LSI就绪 */
;;;44     	while (RCC_GetFlagStatus(RCC_FLAG_LSIRDY) == RESET);
000016  bf00              NOP      
                  |L1.24|
000018  2061              MOVS     r0,#0x61
00001a  f7fffffe          BL       RCC_GetFlagStatus
00001e  2800              CMP      r0,#0
000020  d0fa              BEQ      |L1.24|
;;;45     
;;;46     	/* 写入0x5555表示允许访问IWDG_PR 和IWDG_RLR寄存器 */
;;;47     	IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable);
000022  f2455055          MOV      r0,#0x5555
000026  f7fffffe          BL       IWDG_WriteAccessCmd
;;;48     	
;;;49     	/*  LSI/32 分频*/
;;;50     	IWDG_SetPrescaler(IWDG_Prescaler_128);
00002a  2005              MOVS     r0,#5
00002c  f7fffffe          BL       IWDG_SetPrescaler
;;;51     	
;;;52     	IWDG_SetReload(_ulIWDGTime);
000030  b2a0              UXTH     r0,r4
000032  f7fffffe          BL       IWDG_SetReload
;;;53     	
;;;54     	/* 重载IWDG计数 */
;;;55     	IWDG_ReloadCounter();
000036  f7fffffe          BL       IWDG_ReloadCounter
;;;56     	
;;;57     	/* 使能 IWDG (LSI oscillator 由硬件使能) */
;;;58     	IWDG_Enable();		
00003a  f7fffffe          BL       IWDG_Enable
;;;59     }
00003e  bd10              POP      {r4,pc}
;;;60     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\User\\bsp\\src\\bsp_iwdg.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_iwdg_c_28c9ceec____REV16|
#line 114 "..\\..\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___10_bsp_iwdg_c_28c9ceec____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_bsp_iwdg_c_28c9ceec____REVSH|
#line 128
|__asm___10_bsp_iwdg_c_28c9ceec____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
